#!/usr/bin/ruby
# encoding: UTF-8

#
# BigBlueButton open source conferencing system - http://www.bigbluebutton.org/
#
# Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 3.0 of the License, or (at your option)
# any later version.
#
# BigBlueButton is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
#

require "trollop"
require File.expand_path('../../../lib/recordandplayback', __FILE__)

opts = Trollop::options do
  opt :meeting_id, "Meeting id to archive", :type => String
end
meeting_id = opts[:meeting_id]

logger = Logger.new("/var/log/bigbluebutton/post_publish.log", 'weekly' )
logger.level = Logger::INFO
BigBlueButton.logger = logger

published_files = "/var/bigbluebutton/published/presentation/#{meeting_id}"

#
### Main Code
#

require 'shellwords'
input_dir = Shellwords.escape(published_files)
output_file = Shellwords.escape("#{published_files}/#{meeting_id}.mp4")

BigBlueButton.logger.info("Create downloadable video for [#{meeting_id}] start")
rs = %x(
/bin/cat <<EOF | /usr/bin/kubectl --kubeconfig /usr/local/bigbluebutton/core/scripts/post_publish/kube_config -n bbbvideodownload create -f -
apiVersion: batch/v1
kind: Job
metadata:
  generateName: build-video-
  namespace: bbbvideodownload
  labels:
    meetingId: #{meeting_id}
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      securityContext:
        runAsUser: 998
        runAsGroup: 998
        fsGroup: 998
      imagePullSecrets:
          - name: kube-pull
      volumes:
      - name: bbb-nas
        persistentVolumeClaim:
           claimName: bbb-nas-claim
      - name: cache-volume
        emptyDir: {}
      containers:
      - name: build-video
        resources:
          limits:
            cpu: "2"
          requests:
            cpu: "1"
        image: mbcom/kubernetes-bbb-video-download:v2.1
        imagePullPolicy: IfNotPresent
        command: ["node",  "index.js", "-i", "#{input_dir}","-o","#{output_file}"]
        volumeMounts:
        - name: bbb-nas
          mountPath: /var/bigbluebutton/published/
        - mountPath: /home/bigbluebutton/tmp
          name: cache-volume
      restartPolicy: Never
  backoffLimit: 2
EOF
)
BigBlueButton.logger.info(rs)
# clean up
rs = `/usr/bin/kubectl --kubeconfig /usr/local/bigbluebutton/core/scripts/post_publish/kube_config -n bbbvideodownload get jobs | grep "1/1" | cut -d " " -f1 | xargs /usr/bin/kubectl --kubeconfig /usr/local/bigbluebutton/core/scripts/post_publish/kube_config  -n bbbvideodownload delete job`
BigBlueButton.logger.info(rs)
BigBlueButton.logger.info("Create downloadable video for [#{meeting_id}] end")
exit 0
